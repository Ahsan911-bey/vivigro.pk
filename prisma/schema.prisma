generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(USER)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  cartItems CartItem[]
  orders    Order[]
}

model Product {
  id          String         @id @default(uuid())
  name        String
  description String
  price       Float
  quantity    Int
  category    Category
  videoUrl    String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  cartItems   CartItem[]
  orderItems  OrderItem[]
  images      ProductImage[]
}

model ProductImage {
  id        String  @id @default(uuid())
  url       String
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model CartItem {
  id        String  @id @default(uuid())
  userId    String
  productId String
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model Order {
  id            String        @id @default(uuid())
  userId        String
  totalAmount   Float
  paymentMethod PaymentMethod
  status        OrderStatus   @default(PENDING)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  first_name    String?
  last_name     String?
  email         String?
  phone         String?
  address       String?
  city          String?
  state         String?
  user          User          @relation(fields: [userId], references: [id])
  items         OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])
}

enum Category {
  TEXTILE
  FERTILIZER
}

enum Role {
  USER
  ADMIN
}

enum PaymentMethod {
  STRIPE
  PAYFAST
}

enum OrderStatus {
  PENDING
  PAID
  FAILED
}
