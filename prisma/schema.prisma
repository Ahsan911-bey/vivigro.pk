generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  orders    Order[]
  cartItems CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String         @id @default(uuid())
  name        String
  description String
  price       Float
  quantity    Int
  category    Category
  images      ProductImage[]
  videoUrl    String?
  cartItems   CartItem[]
  orderItems  OrderItem[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model ProductImage {
  id        String   @id @default(uuid())
  url       String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
}

model CartItem {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
}

model Order {
  id            String      @id @default(uuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  items         OrderItem[]
  totalAmount   Float
  paymentMethod PaymentMethod
  status        OrderStatus @default(PENDING)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model OrderItem {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Float
}

enum Category {
  TEXTILE
  FERTILIZER
}

enum Role {
  USER
  ADMIN
}

enum PaymentMethod {
  STRIPE
  PAYFAST
}

enum OrderStatus {
  PENDING
  PAID
  FAILED
} 